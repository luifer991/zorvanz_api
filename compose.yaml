# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

# TODO: hide sensible data for uploading to github and deploy it
services:
  server:
    build:
      context: .
    mem_limit: 512m
    ports:
      - "8080:8080"
    environment:
      DB_URL: jdbc:postgresql://host.docker.internal:5432/zorvanz
      DB_USER: postgres
      DB_PASSWORD: 158365402Luifer@
    restart: always
    depends_on:
      localhost:
        condition: service_healthy
  localhost:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: 158365402Luifer@
      POSTGRES_DATABASE: zorvanz
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 10s
      retries: 10

    # TODO: look for more information about volumes
    volumes:
      - zorvanz:/var/lib/postgresql

  volumes:
    zorvanz:


#  volumes:
#          - db-data:/var/lib/postgresql/data
#  environment:
#           POSTGRES_PASSWORD=158365402Luifer@
#           POSTGRES_DATABASE=zorvanz
#  ports:
#          - 5432:5432
#  healthcheck:
#          test: [ "CMD", "pg_isready", "-U", "petclinic" ]
#          interval: 10s
#          timeout: 5s
#          retries: 5
#volumes:
#      db-data:

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

